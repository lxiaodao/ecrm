<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd          
           http://www.springframework.org/schema/cache
           http://www.springframework.org/schema/cache/spring-cache.xsd           
           http://www.springframework.org/schema/data/mongo
           http://www.springframework.org/schema/data/mongo/spring-mongo.xsd
           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd"
	default-lazy-init="false">


	
    <description>Spring公共配置文件 </description>
	
	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	
    <context:component-scan base-package="com.billioncube,com.weheros,com.handsight" />
	<cache:annotation-driven /> 
	<!-- All Log use self4j -->
	<bean id="julOverSlf4jProcessor" class="com.weheros.framework.core.utils.JulOverSlf4jProcessor" />

	<!-- internationalization file
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>messages/messages</value>
			</list>
		</property>
	</bean>
	 -->
	 
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
	      	<property name="basenames">
			<list>
				<value>messages/messages</value>
				<value>org/springframework/security/messages</value>
			</list>
		</property>
	
	</bean>
	<!-- 定义受环境影响易变的变量 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
		id="propertyReader">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/infrastructure/app.properties</value>
				<value>classpath*:/infrastructure/jdbc.properties</value>
				
			</list>
		</property>
	</bean>


	<!-- 数据源配置,主要用于开发测试环境 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

		<property name="initialPoolSize">
			<value>10</value>
		</property>
		<property name="minPoolSize">
			<value>5</value>
		</property>
		<property name="maxPoolSize">
			<value>30</value>
		</property>
		<property name="acquireIncrement">
			<value>5</value>
		</property>
		<property name="maxIdleTime">
			<value>60</value>
		</property>
		<property name="maxStatements">
			<value>100</value>
		</property>
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
	<!-- 事务管理器配置,多数据源JTA事务 WebLogicJtaTransactionManager -->
	<!-- <bean id="jtaTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/> -->
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"  />
	<!--=================AOP trasction controll and send Mail=============== -->
	<aop:config>
		<!-- This definition creates auto-proxy infrastructure based on the given 
			pointcut, expressed in AspectJ pointcut language. Here: applying the advice 
			named "txAdvice" to all methods on classes in package and subpackages. -->
		<aop:advisor
			pointcut="execution(* com.weheros.infrastructure.datasystem..*.*(..))"
			advice-ref="txAdvice" />
			<aop:advisor
			pointcut="execution(* com.handsight.ad..*.*(..))"
			advice-ref="txAdvice" />
			

	</aop:config>

	<!-- Transaction advice definition, based on method name patterns. Defaults 
		to PROPAGATION_REQUIRED for all methods whose name starts with "insert" or 
		"update", and to PROPAGATION_REQUIRED with read-only hint for all other methods. 
		transaction-manager="transactionManager" All exception rollback, If do not,please 
		add the parameter no-rollback-for="xxxException" -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*insert*" rollback-for="Exception" />
			<tx:method name="*create*" rollback-for="Exception" />
			<tx:method name="*save*" rollback-for="Exception" />
			<tx:method name="*update*" rollback-for="Exception" />
			<tx:method name="*delete*" rollback-for="Exception" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- ============================== MongoDB configuration =========================================== -->
    
   
	
	<!--  --> 
    <mongo:mongo id="replicaSetMongo" replica-set="${mongo.replicaSetSevers}" />

	<!--  mongo:db-factory dbname="${mongo.dbname}" mongo-ref="replicaSetMongo" /> -->
	<mongo:db-factory dbname="${mongo.dbname}" mongo-ref="replicaSetMongo" write-concern="ACKNOWLEDGED" />
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
	</bean> 
	
	<!-- =================== redis configuration ================================= -->

	<bean id="jedisConnFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<!-- <property name="poolConfig" ref="jedisPoolConfig"></property> -->
		<property name="hostName" value="${redis.hostName}"></property>
		<property name="port" value="${redis.port}"></property>
		<!-- property name="password" value="0123456"></property -->
		<property name="timeout" value="${redis.timeout}"></property>
		<property name="usePool" value="true"></property>
	</bean>

   <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnFactory"/>
    <!-- declare Redis Cache Manager -->
    <bean  id="cacheManager"  class="org.springframework.data.redis.cache.RedisCacheManager" >
        <constructor-arg name="template" ref="redisTemplate" />
    </bean>
    
     <bean id="csrfSecurityRequestMatcher" class="com.weheros.framework.core.security.csrf.CsrfSecurityRequestMatcher"  />
  
  
	
</beans>